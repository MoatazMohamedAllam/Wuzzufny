@model Wuzzufny.ViewModels.EmployeeProfileViewModel
@{
    ViewBag.Title = "Update";
}
<div class="update-page">
    <h1 class="title"><i class="fa fa-edit icon"></i>Edit Profile</h1>
    <div class="container">
        @using (Html.BeginForm("Update", "Employees", FormMethod.Post, new { @class = "col-md-8 update-form", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.ProfileImage)
        
            // @Html.ValidationSummary("", new { @class = "text-danger" })

            <div class="userphoto">
                <div class="userphoto-img">
                    @if (Model.ProfileImage != null)
                {
                        <img class="profile-img" src="@Url.Content("~/images/Employees/"+Model.ProfileImage)" alt="" id="imagePreview" />
                    }
                    else
                    {
                        <span class="profile-img bg-secondary pt-3  text-light h2 text-uppercase" id="imagePosition">
                            @User.Identity.Name[0]
                        </span>
                        <img class="profile-img" src="@Url.Content("~/images/Employees/"+Model.ProfileImage)" alt="" id="imagePreview" />

                    }
                </div>

                <div class="userphoto-content">
                    <div class="heading">
                        <h5>Profile Photo</h5>
                    </div>
                    <span class="text-muted">You can upload a .jpg, .png, or .gif photo with max size of 5MB.</span>
                    <div class="userphoto-links">
                        <input type="file" accept=".jpg, .jpge, .png, .gif" name="upload" id="uploadImg" onchange="ShowImagePreview(this, document.getElementById('imagePreview'),document.getElementById('imagePosition'))" hidden />
                        <label class="btn changephoto-btn" for="uploadImg">Change Photo</label>
                        <a href="#">Edit Preview</a>
                        <a href="#">Delete</a>
                    </div>

                </div>
            </div>


            <div class="form-group first-name">
                @Html.LabelFor(m => m.FirstName, new { @class = "font-weight-bold" })
                <span style="color:red;">*</span>
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control firstname-txt" })
            </div>

            <div class="form-group last-name">
                @Html.LabelFor(m => m.LastName, new { @class = "font-weight-bold" })
                <span style="color:red;">*</span>
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control last" })
            </div>

            <div class="form-group date-drop">
                @Html.LabelFor(m => m.birthDate, new { @class = "birthdate-label font-weight-bold" })
                @Html.DropDownListFor(m => m.Day, Enumerable.Range(1, 31).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), "Day..", new { @class = "date-form" })
                @Html.DropDownListFor(m => m.Month, Enumerable.Range(1, 12).Select(i => new SelectListItem { Value = i.ToString(), Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(i) }), "Month..", new { @class = "date-form" })
                @Html.DropDownListFor(m => m.Year, Enumerable.Range(1900, 118).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), "Year..", new { @class = "date-form" })

            </div>

            <div class="form-group gender-radio">
                @Html.LabelFor(m => m.Gender, new { @class = "gender-label font-weight-bold" })
                Male
                @Html.RadioButtonFor(m => m.Gender, "Male")
                Female
                @Html.RadioButtonFor(m => m.Gender, "Female")
            </div>

            <div class="form-group military-drop">
                @Html.LabelFor(m => m.MilitaryStatus, new { @class = "font-weight-bold" })
                @*@Html.DropDownList("MilitaryStatus", null, "-Select-", new { @class = "form-control" })*@
                @Html.DropDownListFor(m => m.MilitaryStatus, Model.Militaries, "-Select-", new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.MaritalStatus, new { @class = "marital-label font-weight-bold" })
                Unspecified
                @Html.RadioButtonFor(m => m.MaritalStatus, "Unspecified")
                Single
                @Html.RadioButtonFor(m => m.MaritalStatus, "Single")
                Married
                @Html.RadioButtonFor(m => m.MaritalStatus, "Married")
            </div>

            <div class="form-group">
                <input type="submit" class="btn btn-success" value="Save Changes" id="save" />
            </div>
        }
    </div>

</div>

